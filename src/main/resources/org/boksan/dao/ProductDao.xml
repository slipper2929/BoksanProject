<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="org.boksan.dao.ProductDao">
  
  	<!-- 상품분류 select box -->
  	<select id="product_group_select" resultType="org.boksan.model.Product_groupDTO">
  		select * from b_product_group
  	</select>
  	
  	<!-- 상품등록 버튼 -->
	  <insert id="ProductInsert">
	  	insert into b_product(product_name, price, place, business_name, pallet_in_ratio, product_group_code)
	  	values(#{product_name},#{price},#{place},#{business_name}, #{pallet_in_ratio},#{product_group_code})
	  </insert>
	  
	  <!-- 상품분류추가 버튼 -->
	  <insert id="Product_group_addInsert">
	  	insert into b_product_group(product_group_name)
	  	value(#{product_group_name})
	  </insert>
	  
	  <!-- 발주 예상 구매액 -->
	  <select id="price_select" resultType="String">
	  	select price
	  	from b_product
	  	where product_code = #{data}
	  </select>
	  
	  <!-- 상품조회 리스트 -->
	  <select id="piproduct_select" resultType="org.boksan.model.b_productDTO">
		
		<if test = "keyword == null">
		select p.*, pg.product_group_name
		from(
			select @rownum:=@rownum+1 as rownum, p.*
			from (select @rownum:=0) as tmp, b_product p	
			LEFT JOIN b_product_group pg
			ON p.product_group_code = pg.product_group_code
			order BY p.product_code
			) as p LEFT JOIN b_product_group pg
			ON p.product_group_code = pg.product_group_code
		<![CDATA[
			where rownum > (#{pagenum} - 1 ) * #{amount} and rownum <= #{pagenum} * 20
		]]>
		</if>
		<if test = "keyword != null">
			select p.*, pg.product_group_name
			from(
			select @rownum:=@rownum+1 as rownum, p.*
			from (select @rownum:=0) as tmp, b_product p LEFT JOIN b_product_group pg
			ON p.product_group_code = pg.product_group_code
			where p.product_code like CONCAT('%',#{keyword},'%')
			or p.product_name like CONCAT('%',#{keyword},'%')
			or pg.product_group_name like CONCAT('%',#{keyword},'%')
			or p.place like CONCAT('%',#{keyword},'%')
			or p.business_name like CONCAT('%',#{keyword},'%')
			or p.pallet_in_ratio like CONCAT('%',#{keyword},'%')
			order BY p.product_code 
			) as p left join b_product_group pg
			ON p.product_group_code = pg.product_group_code	
			<![CDATA[
			where rownum > (#{pagenum}-1) * #{amount} and rownum <= #{pagenum} * 20
		]]>
		</if>
	  </select>
	  
	  <!-- 페이징 처리를 위한 전체건수 상품조회 -->
 	<select id="getTotalCountPI" resultType="int">
		<if test = "keyword == null">
	 		select count(*)
	 		FROM b_product p JOIN b_product_group pg
			ON p.product_group_code = pg.product_group_code
	 	</if>
	 	<if test = "keyword != null">
		 	select count(*)
	 		FROM b_product p JOIN b_product_group pg
			ON p.product_group_code = pg.product_group_code
		 	where p.product_name like concat('%',#{keyword},'%')
			or p.business_name like concat('%',#{keyword},'%')
			or p.place like concat('%',#{keyword},'%')
			or pg.product_group_name like concat('%',#{keyword},'%')
	 	</if>
 	</select>
	  
	  <!-- 상품조회 리스트 수정 -->
	 <update id="update_product">
	  	UPDATE b_product
		SET product_name = #{product_name},
			product_group_code = #{product_group_code},
			place = #{place},
			business_name = #{business_name},
			price = #{price},
			pallet_in_ratio = #{pallet_in_ratio}
		WHERE product_code = #{product_code}
	  </update>
	  
	  <!-- 상품조회 리스트 수정의 상품분류코드 selectBox -->
	  <select id="gproduct_select" resultType="org.boksan.model.b_productDTO">
	  	SELECT *FROM b_product_group
	  </select>
	  <!-- 상품조회 리스트 삭제 -->
	  <delete id="product_list_delete">
	  	delete from b_product
	  	where product_code = #{product_code}
	  </delete>
	   
  </mapper>