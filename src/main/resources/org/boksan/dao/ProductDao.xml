<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="org.boksan.dao.ProductDao">
  
  	<!-- 상품분류 select box -->
  	<select id="product_group_select" resultType="org.boksan.model.Product_groupDTO">
  		select * from b_product_group
  	</select>
  	
  	<!-- 상품등록 버튼 -->
	  <insert id="ProductInsert">
	  	insert into b_product(product_name, price, country_code, business_code, pallet_in_ratio, product_group_code)
	  	values(#{product_name},#{price},#{country_code},#{business_code}, #{pallet_in_ratio},#{product_group_code})
	  </insert>
	  
	  <!-- 상품분류추가 버튼 -->
	  <insert id="Product_group_addInsert">
	  	INSERT INTO b_product_group
	  	SELECT (MAX(product_group_code)+1) AS product_group_code,
	  	#{product_group_name} AS product_group_name,
	  	#{product_group_type} AS product_group_type
	  	FROM b_product_group
	  </insert>
	  
	  <!-- 발주 예상 구매액 -->
	  <select id="price_select" resultType="String">
	  	select price
	  	from b_product
	  	where product_code = #{data}
	  </select>
	  
	  
	  <resultMap type="org.boksan.model.Product_groupDTO" id="Product_groupDTO">
	  	<result property="product_group_name" column="Product_group_name"></result>
	  </resultMap>
	  
	  <resultMap type="org.boksan.model.b_productDTO" id="b_productDTO">
	  	<result property="product_code" column="Product_code"></result>
	  	<result property="product_name" column="Product_name"></result>
	  	<result property="country_code" column="Country_code"></result>
	  	<result property="country_name" column="Country_name"></result>
	  	<result property="business_name" column="Business_name"></result>
	  	<result property="business_code" column="Business_code"></result>
	  	<result property="price" column="price"></result>
	  	<result property="pallet_in_ratio" column="Pallet_in_ratio"></result>
	  	<result property="product_group_code" column="Product_group_code"></result>
	  	<collection property="product_groupdto" resultMap="Product_groupDTO"></collection>
	  </resultMap>
	  
	  <!-- 상품조회 리스트 -->
	  <select id="piproduct_select" resultMap="b_productDTO">
		
		<if test = "keyword == null">
		select p.*
		from(
			select @rownum:=@rownum+1 as rownum, p.*, c.country_name, b.business_name,  pg.product_group_name
			from (select @rownum:=0) as tmp, b_product p	
			LEFT JOIN b_product_group pg
			ON p.product_group_code = pg.product_group_code
			LEFT JOIN country c
			ON p.country_code = c.country_code
			LEFT JOIN business b
			ON p.business_code = b.business_code
			order BY p.product_code
			) as p LEFT JOIN b_product_group pg
			ON p.product_group_code = pg.product_group_code
		<![CDATA[
			where rownum > (#{pagenum} - 1 ) * #{amount} and rownum <= #{pagenum} * 20
		]]>
		</if>
		<if test = "keyword != null">
			select p.*
			from(
			select @rownum:=@rownum+1 as rownum, p.*, c.country_name, b.business_name,  pg.product_group_name
			from (select @rownum:=0) as tmp, b_product p LEFT JOIN b_product_group pg
			ON p.product_group_code = pg.product_group_code
			LEFT JOIN country c
			ON p.country_code = c.country_code
			LEFT JOIN business b
			ON p.business_code = b.business_code
			where p.product_code like CONCAT('%',#{keyword},'%')
			or p.product_name like CONCAT('%',#{keyword},'%')
			or pg.product_group_name like CONCAT('%',#{keyword},'%')
			or c.country_name like CONCAT('%',#{keyword},'%')
			or b.business_name like CONCAT('%',#{keyword},'%')
			or p.pallet_in_ratio like CONCAT('%',#{keyword},'%')
			order BY p.product_code 
			) as p
			<![CDATA[
			where rownum > (#{pagenum}-1) * #{amount} and rownum <= #{pagenum} * 20
			]]>
		</if>
	  </select>
	  
	  <!-- 페이징 처리를 위한 전체건수 상품조회 -->
 	<select id="getTotalCountPI" resultType="int">
		<if test = "keyword == null">
	 		select count(*)
	 		FROM b_product p JOIN b_product_group pg
			ON p.product_group_code = pg.product_group_code
	 	</if>
	 	<if test = "keyword != null">
		 	select count(*)
	 		FROM b_product p JOIN b_product_group pg
			ON p.product_group_code = pg.product_group_code
			LEFT JOIN country c
			ON p.country_code = c.country_code
			LEFT JOIN business b
			ON p.business_code = b.business_code
		 	where p.product_name like concat('%',#{keyword},'%')
			or b.business_name like concat('%',#{keyword},'%')
			or c.country_name like concat('%',#{keyword},'%')
			or pg.product_group_name like concat('%',#{keyword},'%')
	 	</if>
 	</select>
	  
	  <!-- 상품조회 리스트 수정 -->
	 <update id="update_product">
	  	UPDATE b_product
		SET product_name = #{product_name},
			product_group_code = #{product_group_code},
			country_code = #{country_code},
			business_code = #{business_name},
			price = #{price},
			pallet_in_ratio = #{pallet_in_ratio}
		WHERE product_code = #{product_code}
	  </update>
	  
	  <!-- 상품조회 리스트 수정의 상품분류코드 selectBox -->
	  <select id="gproduct_select" resultType="org.boksan.model.Product_groupDTO">
	  	SELECT * FROM b_product_group
	  </select>
	  <!-- 상품조회 리스트 삭제 -->
	  <delete id="product_list_delete">
	  	delete from b_product
	  	where product_code = #{product_code}
	  </delete>
	   
	  <resultMap type="org.boksan.model.b_productDTO" id="select_b_productDTO">
	  	<result property="product_name" column="Product_name"></result>
	  </resultMap>
	   
	  <resultMap type="org.boksan.model.b_houseDTO" id="b_houseDTO">
	  	<result property = "house_code" column="HOUSE_CODE"/>
	  	<result property = "house_function" column="HOUSE_FUNCTION"/>
	  	<result property = "detail_position" column="DETAIL_POSITION"/>
	  </resultMap>

	  <resultMap type="org.boksan.model.b_stockDTO" id="b_stockDTO">
	  	<result property="pallet_num" column="PALLET_NUM"></result>
	  	<result property="product_group_name" column="PRODUCT_GROUP_NAME"></result>
	  	<result property="arrive_date" column="ARRIVE_DATE"></result>
		<collection property="b_productdto" resultMap="select_b_productDTO"></collection>
		<collection property="b_housedto" resultMap="b_houseDTO"></collection>
		
	  </resultMap>
	  <!-- 상품별조회 -->
	  <select id="pplist_select" resultMap="b_stockDTO">
	  	<if test = "keyword == null">
		SELECT s.PALLET_NUM, p.PRODUCT_NAME, pg.PRODUCT_GROUP_NAME,
	  	s.ARRIVE_DATE, h.HOUSE_FUNCTION, h.HOUSE_CODE, h.DETAIL_POSITION
		from(
			select @rownum:=@rownum+1 as rownum, s.*
			from (select @rownum:=0) as tmp, b_stock s	
			LEFT JOIN b_product p
			ON s.product_code = p.PRODUCT_CODE
	  		LEFT JOIN b_product_group pg
	  		ON p.product_group_code = pg.PRODUCT_GROUP_CODE
	  		LEFT JOIN b_house h
	  		ON s.house_code = h.HOUSE_CODE
	  		where s.product_barcode is not null
	  		ORDER BY s.pallet_num
			) as s LEFT JOIN b_product p
			ON s.product_code = p.PRODUCT_CODE
	 	 	LEFT JOIN b_product_group pg
	 	 	ON p.product_group_code = pg.PRODUCT_GROUP_CODE
	  		LEFT JOIN b_house h
	  		ON s.house_code = h.HOUSE_CODE
		<![CDATA[
			where rownum > (#{pagenum} - 1 ) * #{amount} and rownum <= #{pagenum} * 20
		]]>
		</if>
		<if test = "keyword != null">
			select s.pallet_num, p.product_name, pg.product_group_code,
	  		s.arrive_date, h.house_function, h.house_code, h.detail_position
			from(
			select @rownum:=@rownum+1 as rownum, s.*
			from (select @rownum:=0) as tmp, b_stock s LEFT JOIN b_product p
			ON s.product_code = p.product_code
	  		LEFT JOIN b_product_group pg
	  		ON p.product_group_code = pg.product_group_code
	  		LEFT JOIN b_house h
	  		ON s.house_code = h.house_code
			where s.pallet_num like CONCAT('%',#{keyword},'%')
			or p.product_name like CONCAT('%',#{keyword},'%')
			or pg.product_group_name like CONCAT('%',#{keyword},'%')
			and s.product_barcode is not null
			order BY s.pallet_num 
			) as s left join b_product p
			ON s.product_code = p.product_code
	  		LEFT JOIN b_product_group pg
	  		ON p.product_group_code = pg.product_group_code
	  		LEFT JOIN b_house h
	  		ON s.house_code = h.house_code	
			<![CDATA[
			where rownum > (#{pagenum}-1) * #{amount} and rownum <= #{pagenum} * 20
			and s.product_barcode is not null
		]]>
		</if>
	  </select>
	  
	   <!-- 페이징 처리를 위한 전체건수 상품별조회 -->
 	<select id="getTotalCountPP" resultType="int">
		<if test = "keyword == null">
	 		select count(*)
	 		from b_stock s join b_product p
	  		ON s.product_code = p.product_code
	  		JOIN b_product_group pg
	  		ON p.product_group_code = pg.product_group_code
	  		JOIN b_house h
	  		ON s.house_code = h.house_code
	  	
	 	</if>
	 	<if test = "keyword != null">
		 	select count(*)
	 		from b_stock s join b_product p
	  		ON s.product_code = p.product_code
	  		JOIN b_product_group pg
	  		ON p.product_group_code = pg.product_group_code
		 	where s.pallet_num like concat('%',#{keyword},'%')
			or p.product_name like concat('%',#{keyword},'%')
			or pg.product_group_name like concat('%',#{keyword},'%')
	 	</if>
 	</select>
 	
 	<select id="product_country_select" resultType="org.boksan.model.b_productDTO">
 		SELECT *
		FROM country
 	</select>
 	
 	 <select id="product_business_select" resultType="org.boksan.model.b_productDTO">
 		SELECT *
		FROM business
 	</select>
 	
 	<insert id="country_insert">
 		INSERT INTO country (country_code, country_name)
		SELECT CONCAT("C",LPAD(MAX((RIGHT(country_code,4)))+1,4,0)) AS country_code, #{data} as country_name
		FROM country
 	</insert>
 	
 	<select id="country_last_select" resultType="String">
 		SELECT MAX(country_code) AS country_code
		FROM country
 	</select>
 	
 	<insert id="business_insert" parameterType="Map">
		INSERT INTO business (business_code, business_name, business_tel)
		SELECT CONCAT("B",LPAD(MAX((RIGHT(business_code,4)))+1,4,0)) AS business_code,
		#{business_name_data} as business_name,
		#{business_tel_data} as business_tel
		FROM business
 	</insert>
 	
 	 <select id="business_last_select" resultType="String">
 		SELECT MAX(business_code) AS business_code
		FROM business
 	</select>
 	
 	<select id="cproduct_select" resultType="org.boksan.model.b_productDTO">
 		SELECT *
		FROM country
 	</select>
 	
 	 <select id="bproduct_select" resultType="org.boksan.model.b_productDTO">
 		SELECT *
		FROM business
 	</select>
 	
 	<select id="in_out_record" resultType="org.boksan.model.statementDTO">
 		SELECT *
		FROM statement
		where (classification = #{record_arr0} OR classification = #{record_arr1} OR classification = #{record_arr2})
 		 <if test="!charge_name.equals('')">
 			AND (emp_name like concat('%',#{charge_name},'%'))
 		</if>
 		<if test="!country_name.equals('')">
 			AND (product_country like concat('%',#{country_name},'%'))
 		</if>
 		<if test="!product_name.equals('')">
 			AND (product_name like concat('%',#{product_name},'%'))
 		</if>
 		 <if test="!business_name.equals('')">
 			AND (product_business like concat('%',#{business_name},'%'))
 		</if>
 		<if test="!inquiry_date_start.equals('') and !inquiry_date_end.equals('')">
 			AND (date BETWEEN #{inquiry_date_start} AND DATE_ADD(#{inquiry_date_end}, INTERVAL 1 DAY))
 		</if>
 	</select>

	<select id="stock_record" resultType="org.boksan.model.b_stockDTO">
		SELECT s.pallet_num, p.product_name, c.country_name, b.business_name, s.stock_num, s.house_code, s.arrive_date
		FROM b_stock s
		LEFT JOIN b_product p
		ON s.product_code = p.product_code
		LEFT JOIN b_product_group pg
		ON p.product_group_code = pg.product_group_code
		LEFT JOIN country c
		ON p.country_code = c.country_code
		LEFT JOIN business b
		ON p.business_code = b.business_code
		WHERE (s.product_barcode IS NOT NULL)
		AND (pg.product_group_type = #{record_arr0}
		OR pg.product_group_type = #{record_arr1}
		OR pg.product_group_type = #{record_arr2}
		OR pg.product_group_type = #{record_arr3})
		<if test="!product_name.equals('')">
			AND (product_name like concat('%',#{product_name},'%'))
		</if>
		<if test="!country_name.equals('')">
			AND (country_name like concat('%',#{country_name},'%'))
		</if>
 		<if test="!inquiry_date_start.equals('') and !inquiry_date_end.equals('')">
 			AND (arrive_date BETWEEN #{inquiry_date_start} AND DATE_ADD(#{inquiry_date_end}, INTERVAL 1 DAY))
 		</if>
		<if test="!business_name.equals('')">
			AND (business_name like concat('%',#{business_name},'%'))
		</if>
		<if test="!house_code.equals('')">
			AND (house_code like concat('%',#{house_code},'%'))
		</if>
	</select>
	
	<select id="house_record" resultType="org.boksan.model.b_houseDTO">
		SELECT h.house_code, s.product_code, p.product_name, s.pallet_num, s.stock_num, s.house_code, h.max_quantity, h.now_quantity, h.detail_position, c.country_name, b.business_name
		FROM b_house h
		LEFT JOIN b_stock s
		ON h.house_code = s.house_code
		LEFT JOIN b_product p
		ON s.product_code = p.product_code
		LEFT JOIN country c
		ON p.country_code = c.country_code
		LEFT JOIN business b
		ON p.business_code = b.business_code
	</select>
  </mapper>