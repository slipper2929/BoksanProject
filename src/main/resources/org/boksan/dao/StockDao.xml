<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.boksan.dao.StockDao" >

	<!-- 파레트 추가 -->
	<insert id="PalletInsert">
		INSERT INTO b_stock(pallet_num, product_code)
		SELECT LPAD(CONVERT(MAX(pallet_num),SIGNED)+1,3,'0') 
		AS pallet_num, #{product_code} AS product_code
		FROM b_stock
	</insert>
	
	<!-- 삭제할 파레트 찾기 -->
	<select id="DeletePalletSelect" resultType="string">
		SELECT pallet_num 
		FROM b_stock
		WHERE product_code = #{data} and stock_num is null
	</select>
	
	<!--  파레트 삭제 -->
	<delete id="pallet_delete">
		DELETE FROM b_stock
		WHERE pallet_num = #{pallet_num}
	</delete>
	
	<!--  이동지시 리스트 -->
	<select id="moveList" resultType="org.boksan.model.b_stockDTO">
	
		<if test = "keyword == null">
		select s.pallet_num, p.product_code, p.product_name, s.arrive_date, s.house_code 
		from(
			select @rownum:=@rownum+1 as rownum, s.*
			from (select @rownum:=0) as tmp,(
			SELECT * 
			FROM b_stock s
			WHERE s.pallet_num NOT IN (SELECT pallet_num FROM b_movement_order)  
			) s 		
			order BY s.pallet_num 
			) as s LEFT JOIN b_product p
			ON s.product_code = p.product_code
		<![CDATA[
			where rownum > (#{pagenum} - 1 ) * #{amount} and rownum <= #{pagenum} * 20
		]]>
		</if>
		<if test = "keyword != null">
			select s.pallet_num, p.product_code, p.product_name, s.arrive_date, s.house_code 
			from(
			select @rownum:=@rownum+1 as rownum, s.*
			from (select @rownum:=0) as tmp, (
			SELECT * 
			FROM b_stock s
			WHERE s.pallet_num NOT IN (SELECT pallet_num FROM b_movement_order)  
			) s left JOIN b_product p
			ON s.product_code = p.product_code
			where s.pallet_num like CONCAT('%',"",'%')
			or p.product_code like CONCAT('%',"",'%')
			or p.product_name like CONCAT('%',"",'%')
			or s.house_code like CONCAT('%',"",'%')
			order BY s.pallet_num 
			) as s left join b_product p
			ON s.product_code = p.product_code	
			<![CDATA[
			where rownum > (#{pagenum}-1) * #{amount} and rownum <= #{pagenum} * 20
		]]>
		</if>
	</select>
	<!-- 페이징 처리를 위한 전체건수 이동지시 -->
	<select id="getTotalCountMo" resultType="int">
		<if test = "keyword == null">
	 		select count(*)
	 		from b_stock s join b_product p
	 		on s.product_code = p.product_code
	 	</if>
	 	<if test = "keyword != null">
		 	select count(*)
	 		from b_stock s join b_product p
	 		ON s.product_code = p.product_code
		 	where s.pallet_num like concat('%',#{keyword},'%')
			or p.product_code like concat('%',#{keyword},'%')
			or p.product_name like concat('%',#{keyword},'%')
			or s.house_code like concat('%',#{keyword},'%')
	 	</if>
 	</select>
 	
 	<!-- 이동지시 -> 이동목록 INSERT -->
 	<insert id="move_change" parameterType="Map">
		insert into b_movement_order
		values(#{pallet_num}, #{movement_address})
	</insert>
 	
 	<!-- 이동목록 리스트 -->
 	<select id="move_list" resultType="org.boksan.model.b_stockDTO">
		<if test = "keyword == null">
		select s.pallet_num, p.product_code, p.product_name, s.house_code, mo.movement_address
		from(
			select @rownum:=@rownum+1 as rownum, s.*
			from (select @rownum:=0) as tmp, b_stock s	
			LEFT JOIN b_product p
			ON s.product_code = p.product_code
			JOIN b_movement_order mo
			ON s.pallet_num = mo.pallet_num	
			order BY s.pallet_num 
			) as s LEFT JOIN b_product p
			ON s.product_code = p.product_code
			JOIN b_movement_order mo
			ON s.pallet_num = mo.pallet_num
		<![CDATA[
			where rownum > (#{pagenum} - 1 ) * #{amount} and rownum <= #{pagenum} * 20
		]]>
		</if>
		<if test = "keyword != null">
			select s.pallet_num, p.product_code, p.product_name, s.house_code, mo.movement_address
			from(
			select @rownum:=@rownum+1 as rownum, s.*
			from (select @rownum:=0) as tmp, b_stock s LEFT JOIN b_product p
			ON s.product_code = p.product_code
			JOIN b_movement_order mo
			ON s.pallet_num = mo.pallet_num
			where s.pallet_num like CONCAT('%',#{keyword},'%')
			or p.product_code like CONCAT('%',#{keyword},'%')
			or p.product_name like CONCAT('%',#{keyword},'%')
			or s.house_code like CONCAT('%',#{keyword},'%')
			or mo.movement_address like CONCAT('%',#{keyword},'%')
			order BY s.pallet_num 
			) as s left join b_product p
			ON s.product_code = p.product_code	
			JOIN b_movement_order mo
			ON s.pallet_num = mo.pallet_num
			<![CDATA[
			where rownum > (#{pagenum}-1) * #{amount} and rownum <= #{pagenum} * 20
		]]>
		</if>
 	</select>
 	
 	<!-- 페이징 처리를 위한 전체건수 이동목록 -->
 	<select id="getTotalCountMol" resultType="int">
		<if test = "keyword == null">
	 		select count(*)
	 		from b_stock s join b_product p
	 		on s.product_code = p.product_code
	 		JOIN b_movement_order mo
			ON s.pallet_num = mo.pallet_num
	 	</if>
	 	<if test = "keyword != null">
		 	select count(*)
	 		from b_stock s join b_product p
	 		ON s.product_code = p.product_code
	 		JOIN b_movement_order mo
			ON s.pallet_num = mo.pallet_num
		 	where s.pallet_num like concat('%',#{keyword},'%')
			or p.product_code like concat('%',#{keyword},'%')
			or p.product_name like concat('%',#{keyword},'%')
			or s.house_code like concat('%',#{keyword},'%')
			or mo.movement_address like CONCAT('%',#{keyword},'%')
	 	</if>
 	</select>
 	
 	<!-- 이동목록 이동할 주소 -->
 	<select id="movement" resultType="String">
 		select movement_address from b_movement_order
 	</select>
 	
 	<!-- 이동목록 주소 확인버튼 -->
 	<update id="move_compare">
 		UPDATE 
		b_stock s JOIN b_product p
		ON s.product_code = p.product_code
		JOIN b_movement_order mo
		ON s.pallet_num = mo.pallet_num
		SET s.house_code = mo.movement_address
		WHERE s.pallet_num = mo.pallet_num
 	</update>
 	
 	<!-- 이동목록 확인버튼 누르면 이동목록 리스트에서 삭제 -->
 	<delete id="move_delete">
 		delete from b_movement_order where pallet_num = #{pallet_num} 
 	</delete>
 	
 	<!-- 이동목록 주소 동일한지 확인 -->
 	<select id="changeHouse" resultType="String">
 		SELECT COUNT(*)
 		FROM b_house
 		where house_code = #{data}
 		
 	</select>
 	
</mapper>