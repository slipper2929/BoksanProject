<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.boksan.dao.ReleaseDao">
	<!-- 총중량 select -->
	<select id="gross_weight_select" resultType="int">
		SELECT gross_weight
		FROM b_recipe
		WHERE recipe_code = #{recipe_code};
	</select>

	<!-- 출고요청 레시피기준 조회(release.js) -->
	<select id="release_recipe_select" resultType="org.boksan.model.materiaDTO">
		SELECT m.product_code, p.product_name, m.material_num
		FROM material m
		LEFT JOIN b_product p
		ON m.product_code = p.product_code
		WHERE m.recipe_code = #{recipe_code};
	</select>
	
	<!-- 출고요청 insert -->
	<insert id="release_insert">
		INSERT INTO b_release (product_code, product_name, release_num, emp_code)
		VALUES(#{product_code}, #{product_name}, #{release_num}, #{emp_code})
	</insert>
	
	<!-- 출고요청처리현황 select -->
	<select id="release_state_inquiry_select" resultType="org.boksan.model.b_releaseDTO">
		<if test = "keyword == null">
		SELECT *
		FROM (
			select @rownum:=@rownum+1 as rownum, r.*, e.name
			from (select @rownum:=0) as tmp, b_release r
			LEFT JOIN b_emp e
			ON r.emp_code = e.emp_code
			order by release_code
			) as b_release 
		<![CDATA[
			where rownum > (#{pagenum} - 1 ) * #{amount} and rownum <= #{pagenum} * 20
		]]>
		</if>
		<if test = "keyword != null">
			SELECT *
			FROM(
				select @rownum:=@rownum+1 as rownum, r.*, e.name
				from(select @rownum:=0) as tmp, b_release r
				LEFT JOIN b_emp e
				ON r.emp_code = e.emp_code
				where situation like concat('%',#{keyword},'%')
				order by release_code
				) as b_release
			<![CDATA[
				where rownum > (#{pagenum} - 1 ) * #{amount} and rownum <= #{pagenum} * 20
			]]>
		</if>
	</select>
	
	<!-- 페이징 처리를 위한 전체건수 -->
	<select id="getTotalCount" resultType="int">
		<if test = "keyword == null">
	 		select count(*)
	 		from b_release
	 	</if>
	 	<if test = "keyword != null">
		 	select count(*)
	 		from b_release
		 	where situation like concat('%',#{keyword},'%')
	 	</if>
 	</select>
 	
 	<!-- 출고요청결제 select -->
 	<select id="release_pay_select" resultType="org.boksan.model.b_releaseDTO">
			SELECT release_pay.*
			FROM(
				SELECT @rownum:=@rownum+1 as rownum, r.*, s.psum, IFNULL(SIGN(s.psum-r.release_num), -1) AS res, e.name
				FROM (select @rownum:=0) as tmp, b_release r
				LEFT JOIN (
					SELECT product_code, SUM(stock_num) AS psum
					FROM b_stock 
					GROUP BY product_code
				) AS s
				ON r.product_code = s.product_code
				LEFT JOIN b_emp e
				ON r.emp_code = e.emp_code
				WHERE r.situation = "대기"
				) AS release_pay
			<![CDATA[
			WHERE rownum > (#{pagenum} - 1 ) * #{amount} and rownum <= #{pagenum} * 20
			]]>
 	</select>
 	
 	<!-- 페이징 처리를 위한 전체건수(결제) -->
	<select id="getTotalCount_pay" resultType="int">
			SELECT COUNT(*)
			FROM b_release r
			LEFT JOIN (
				SELECT product_code, SUM(stock_num) AS psum
				FROM b_stock 
				GROUP BY product_code
			) AS s
			ON r.product_code = s.product_code
			WHERE r.situation = "대기"
	</select>
	
	<!-- 출고요청목록을 위한 파레트목록 select -->
	<select id="getPalletList" resultType="org.boksan.model.b_release_listDTO">
		SET @va = 0;
		SET @va2 = 0;
		SELECT bbb.*
		FROM(
			SELECT aaa.*,
			(case<![CDATA[
				when cumsum_num <= #{release_num} then "1"
				when cumsum_num > #{release_num} then "0"
			END]]>
			) AS cumsum_num_check
			FROM (
				SELECT s.pallet_num AS release_list_code,
						s.product_code,
						s.stock_num AS release_num,
						house_code AS house_address,
						(@va := @va + s.stock_num) AS cumsum_num
				FROM b_stock s
				WHERE product_code = #{product_code} AND product_barcode IS NOT NULL
				ORDER BY arrive_date
			) AS aaa
		) AS bbb
		WHERE bbb.cumsum_num_check = 1
		UNION
		SELECT ccc.*
		FROM(
			SELECT bbb.*
			FROM(
				SELECT aaa.*,
				(case<![CDATA[
					when cumsum_num <= #{release_num} then "1"
					when cumsum_num > #{release_num} then "0"
				END]]>
				) AS cumsum_num_check
				FROM (
					SELECT s.pallet_num AS release_list_code,
					s.product_code,
					s.stock_num AS release_num,
					house_code AS house_address,
					(@va2 := @va2 + s.stock_num) AS cumsum_num
					FROM b_stock s
					WHERE product_code = #{product_code} AND product_barcode IS NOT NULL
					ORDER BY arrive_date
				) AS aaa
			) AS bbb
			WHERE bbb.cumsum_num_check = 0
			LIMIT 1
		) AS ccc
	</select>
	
	<!-- 출고요청목록 insert -->
	<insert id="release_order_list_insert">
		INSERT INTO b_release_list (release_list_code,product_name,release_num,house_address,release_code,release_state)
		VALUES (#{release_list_code}, #{product_name}, #{release_num}, #{house_address}, #{release_code}, 0)
	</insert>
	
	<!-- 출고요청처리현황 update -->
	<update id="release_update">
		UPDATE b_release
		SET situation = "수락"
		WHERE release_code = #{release_code}
	</update>
	
	<!-- 출고요청결제 취소 -->
	<update id="release_cancel">
		UPDATE b_release
		SET situation = "취소"
		WHERE release_code = #{release_code}
	</update>
	
	<!-- 출고지시목록 -->
	<select id="release_order_list" resultType="org.boksan.model.b_release_listDTO">
		SELECT *
		FROM (
			select @rownum:=@rownum+1 as rownum, r.*
			from (select @rownum:=0) as tmp, b_release_list r
		) as b_release_list
		<![CDATA[
			where rownum > (#{pagenum} - 1 ) * #{amount} and rownum <= #{pagenum} * 20
		]]>
	</select>
	
	<!-- 페이징 처리를 위한 전체건수(출고지시목록) -->
	<select id="getTotalCount_order" resultType="int">
	 		select count(*)
	 		from b_release_list
 	</select>
 	
 	<!-- pallet_num select -->
 	<select id="pallet_num_select" resultType="int">
 		select stock_num
 		from b_stock
 		where pallet_num = #{pallet_num}
 	</select>
 	
 	<!-- 재고 update -->
 	<update id="release_stock_update">
 		UPDATE b_stock
		SET arrive_date = NULL,
			stock_num = NULL,
			house_code = NULL,
			product_barcode = NULL
		WHERE pallet_num = #{release_list_code}
 	</update>
 	
 	<!-- 재고 update(파레트넘이랑 출고) -->
 	<update id="release_stock_update_zero">
 		UPDATE b_stock
		SET stock_num = stock_num-#{release_num}
		WHERE pallet_num = #{release_list_code}
 	</update>
 	
 	<!-- release_list 삭제 -->
 	<delete id="release_list_delete">
 		DELETE FROM b_release_list
 		WHERE release_list_code = #{release_list_code}
 	</delete>
 	
 	<!-- release 삭제를 위한 release_list 조회 -->
 	<select id="release_list_check" resultType="int">
 		SELECT COUNT(*)
		FROM b_release_list
		WHERE release_code = #{release_code}
 	</select>
 	
 	<!-- release 삭제 -->
 	<delete id="release_delete">
 		DELETE FROM b_release
 		WHERE release_code = #{release_code}
 	</delete>
 	
 	<select id="recipe_select" resultType="String">
 		SELECT recipe_code
 		FROM b_recipe
 	</select>
 	
 	<select id="emp_select" resultType="org.boksan.model.b_empDTO">
 		SELECT *
 		FROM b_emp
 		where id = #{userId}
 	</select>
</mapper>